name: "Tests"

on:
    push:
        branches:
            - "main"
    pull_request: null

jobs:
    tests:
        runs-on: "ubuntu-latest"
        name: "Tests with PHP ${{ matrix.php }}"
        strategy:
            fail-fast: true
            matrix:
                php:
                    - "7.4"
                    - "8.0"
                    - "8.1"
                    - "8.2"

        steps:
            -   name: "Check out repository code"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php }}"
                    tools: "composer"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run tests"
                run: "make phpunit"

    infection:
        runs-on: "ubuntu-latest"
        name: "Infection with PHP ${{ matrix.php }}"
        strategy:
            fail-fast: true
            matrix:
                php:
                    - "8.2"

        steps:
            -   name: "Check out repository code"
                uses: "actions/checkout@v2"

            -   name: "Setup PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    php-version: "${{ matrix.php }}"
                    tools: "composer"
                    coverage: "xdebug"

            -   name: "Install Composer dependencies"
                uses: "ramsey/composer-install@v2"

            -   name: "Run tests and mutation testing"
                run: "make infection"

    # This is a "trick", a meta task which does not change, and we can use in
    # the protected branch rules as opposed to the individual tests which
    # may change regularly.
    validate-tests:
        name: Tests Status
        runs-on: ubuntu-latest
        needs:
            - tests
            - infection
        if: always()
        steps:
            - name: Successful run
              if: ${{ !(contains(needs.*.result, 'failure')) }}
              run: exit 0

            - name: Failing run
              if: ${{ contains(needs.*.result, 'failure') }}
              run: exit 1
